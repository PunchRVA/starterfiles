@mixin grid-base() {

	.grid {

		box-sizing: border-box;
		list-style: none;
		margin-bottom: -#{grid-option('default-gutter')};
		margin-right: -#{grid-option('default-gutter')};
		display: flex;
		flex: 0 1 auto;
		flex-direction: row;
		flex-wrap: wrap;

		@if grid-option('fallback') and grid-option('fallback-markup-fix') {
			.no-flexbox & {
				letter-spacing: -0.31em;
			}

			// opera hack
			.opera:-o-prefocus,
			.no-flexbox & {
				word-spacing: -0.43em;
			}
		}

		&__item {
			box-sizing: border-box;
			margin: 0;
			flex: 0 0 auto;
			flex-basis: 100%;
			max-width: 100%;
			padding-bottom: #{grid-option('default-gutter')};
			padding-right: #{grid-option('default-gutter')};

			@if grid-option('fallback') {
				.no-flexbox & {
					display: inline-block;
					vertical-align: top;
					letter-spacing: normal;
					word-spacing: normal;
					width: 100%;
				}
			}
		}

		&__fill {
			display: flex;
			flex-direction: column;
			flex-grow: 1;
			// IE10-11 bugfix
			> img {
				flex-shrink: 0;
			}
		}

	}

}

@mixin grid-width($modifier: '') {

	$modifier: add-dashes-to-modifier($modifier);

	@each $grid-base in grid-option('bases') {
		@for $counter from 1 through $grid-base {
			.grid__item[data-grid#{$modifier}^='#{$counter}/#{$grid-base}'],
			.grid__item[data-grid#{$modifier}*=' #{$counter}/#{$grid-base}'] {
				flex-grow: 0;
				flex-basis: $counter / $grid-base * 100%;
				max-width: $counter / $grid-base * 100%;

				@if grid-option('fallback') {
					.no-flexbox & {
						width: $counter / $grid-base * 100%;
					}
				}
			}
		}
	}

}

@mixin grid-gutter($modifier: '') {

	$modifier: add-dashes-to-modifier($modifier);

	@each $name, $width in grid-option('gutters') {
		.grid[data-grid#{$modifier}^='#{$name}'],
		.grid[data-grid#{$modifier}*=' #{$name}'] {
			margin: 0 0 #{-$width} #{-$width};
			> .grid__item {
				padding: 0 0 #{$width} #{$width}
			}
		}
	}

}

@mixin grid-vertical-gutter($modifier: '') {

	$modifier: add-dashes-to-modifier($modifier);

	@each $name, $width in grid-option('gutters') {
		.grid[data-grid#{$modifier}^='v--#{$name}'],
		.grid[data-grid#{$modifier}*=' v--#{$name}'] {
			margin-bottom: -$width;
			> .grid__item {
				padding-bottom: $width;
			}
		}
	}

}